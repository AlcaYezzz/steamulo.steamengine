- name: Converge
  hosts: instance
  become: true

  pre_tasks:
    - include_tasks: "../resources/setup_{{ ansible_os_family | lower }}.yml"

    - name: Add mysql-client
      apt:
        name: mysql-client
        state: present

    - name: Add ppa:ondrej/php repository
      apt_repository:
        repo: ppa:ondrej/php
      when: ansible_os_family == 'Debian'
    - name: Add mysql repository
      apt_repository:
        repo: ppa:ondrej/php
      when: ansible_os_family == 'Debian'

    - name: Add remi-php74 repository
      yum:
        name: https://rpms.remirepo.net/enterprise/remi-release-7.rpm
      when: ansible_os_family == 'RedHat'

  roles:
    - role: geerlingguy.php
      vars:
        php_enablerepo: "remi-php74"
        php_default_version_debian: "7.4"
        php_install_recommends: false
        php_enable_php_fpm: true
        php_webserver_daemon: "nginx"
        php_date_timezone: "Europe/Paris"
        php_expose_php: Off
    - role: geerlingguy.git
    - role: geerlingguy.composer
      vars:
        composer_path: /usr/local/bin/composer
    - role: geerlingguy.drush
    - role: geerlingguy.drupal
      vars:
        drupal_deploy: false
        drupal_deploy_dir: "/var/www/drupal"
        drupal_build_makefile: false
        drupal_build_composer: false
        drupal_install_site: false

        drupal_build_composer_project: true
        drupal_composer_project_package: "drupal/recommended-project:^8"
        drupal_composer_project_options: "--prefer-dist --stability dev --no-interaction"

        drupal_core_path: "{{ drupal_deploy_dir }}/web"
        drupal_core_owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
        drupal_core_owner_become: false
        drupal_db_name: "{{ drupal_mysql_db_name }}"
        drupal_db_user: "{{ drupal_mysql_db_user }}"
        drupal_db_password: "{{ drupal_mysql_db_password }}"
        drupal_db_host: "172.17.0.1:4806"
    - role: geerlingguy.nginx
      vars:
        nginx_ppa_use: true
        nginx_remove_default_vhost: true
        nginx_worker_processes: "{{ ansible_processor_vcpus|default(ansible_processor_count) }}"
        nginx_vhosts:
          - listen: "80"
            server_name: "localhost"
            index: "/"
            extra_parameters: |
              root /var/www/drupal;

              location = /favicon.ico {
                      log_not_found off;
                      access_log off;
                  }

                  location = /robots.txt {
                      allow all;
                      log_not_found off;
                      access_log off;
                  }

                  # Very rarely should these ever be accessed outside of your lan
                  location ~* \.(txt|log)$ {
                      allow 192.168.0.0/16;
                      deny all;
                  }

                  location ~ \..*/.*\.php$ {
                      return 403;
                  }

                  location ~ ^/sites/.*/private/ {
                      return 403;
                  }

                  # Block access to scripts in site files directory
                  location ~ ^/sites/[^/]+/files/.*\.php$ {
                      deny all;
                  }

                  # Allow "Well-Known URIs" as per RFC 5785
                  location ~* ^/.well-known/ {
                      allow all;
                  }

                  # Block access to "hidden" files and directories whose names begin with a
                  # period. This includes directories used by version control systems such
                  # as Subversion or Git to store control files.
                  location ~ (^|/)\. {
                      return 403;
                  }

                  location / {
                      # try_files $uri @rewrite; # For Drupal <= 6
                      try_files $uri /index.php?$query_string; # For Drupal >= 7
                  }

                  location @rewrite {
                      #rewrite ^/(.*)$ /index.php?q=$1; # For Drupal <= 6
                      rewrite ^ /index.php; # For Drupal >= 7
                  }

                  # Don't allow direct access to PHP files in the vendor directory.
                  location ~ /vendor/.*\.php$ {
                      deny all;
                      return 404;
                  }

                  # Protect files and directories from prying eyes.
                  location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|composer\.(lock|json)$|web\.config$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
                      deny all;
                      return 404;
                  }

                  location ~ '\.php$|^/update.php' {
                      fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
                      # Ensure the php file exists. Mitigates CVE-2019-11043
                      try_files $fastcgi_script_name =404;
                      # Security note: If you're running a version of PHP older than the
                      # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
                      # See http://serverfault.com/q/627903/94922 for details.
                      include fastcgi_params;
                      # Block httpoxy attacks. See https://httpoxy.org/.
                      fastcgi_param HTTP_PROXY "";
                      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                      fastcgi_param PATH_INFO $fastcgi_path_info;
                      fastcgi_param QUERY_STRING $query_string;
                      fastcgi_intercept_errors on;
                      # PHP 5 socket location.
                      #fastcgi_pass unix:/var/run/php5-fpm.sock;
                      # PHP 7 socket location.
                      fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
                  }

                  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                      try_files $uri @rewrite;
                      expires max;
                      log_not_found off;
                  }

                  # Fighting with Styles? This little gem is amazing.
                  # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
                  location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
                      try_files $uri @rewrite;
                  }

                  # Handle private files through Drupal. Private file's path can come
                  # with a language prefix.
                  location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
                      try_files $uri /index.php?$query_string;
                  }

                  # Enforce clean URLs
                  # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
                  # Could be done with 301 for permanent or other redirect codes.
                  if ($request_uri ~* "^(.*/)index\.php/(.*)") {
                      return 307 $1$2;
                  }
    - role: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | basename }}"
      vars:
        steamengine_project_name: test_drupal
        steamengine_project_type: drupal8
        steamengine_build_url:
        steamengine_build_checksum: sha1:5ca5bebc8f3b770358732c90b20b94b710158d55
        steamengine_project_configuration:

