#!/bin/bash

# {{ ansible_managed }}

display_usage() {
    echo -e "Usage: $0 <arguments>"
    echo -e "\nArguments:"
    echo -e "  start\n\t\t\tStart the http server"
    echo -e "  stop\n\t\t\tStop the http server"
    echo -e "  restart\n\t\t\tRestart the http server"
    echo -e "  status\n\t\t\tDisplay the http server status"
    echo -e "  reload\n\t\t\tReload the http server configuration"
    echo -e "  fixpermissions\n\t\t\tFix permissions of project's files"
{% for item in steamengine_sf_command %}
    echo -e "  {{ item.cmd_name }}\n\t\t\t{{ item.description }}"
{% endfor %}
{% for item in steamengine_sf_crons %}
    echo -e "  {{ item.cmd_name }}\n\t\t\t{{ item.description }}"
{% endfor %}
    echo -e "  -h, --help\n\t\t\tShow Usages"
    echo ""
}

# if less than two arguments supplied, display usage
if [  $# -le 0 ]
then
    display_usage
    exit 1
fi

# check whether user had supplied -h or --help . If yes display usage
if [[ ( $# == "--help") ||  $# == "-h" ]]
then
    display_usage
    exit 0
fi


while [ $# -gt 0 ]; do
  arg=$1
  case $arg in
{% for item in steamengine_sf_command | union(steamengine_sf_crons) %}
    {{ item.cmd_name }})
    if [ "$(whoami)" != "{{ steamengine_project_user }}" ]; then
        exec su {{ steamengine_project_user }} "$0" "$arg"
    fi
    echo "`date -u` : {{ item.description }}"
    php {{ steamengine_sf_bin_path }}/console {{ item.cmd }}
    exit $?
    ;;
{% endfor %}
    *)
    break
  esac
done

if [ "$EUID" -ne 0 ]
then
    exec sudo "$0" "$@"
fi

while [ $# -gt 0 ]; do
  arg=$1
  shift
  case $arg in
    start)
     systemctl start nginx
     exit $?
    ;;
    stop)
     systemctl stop nginx
     exit $?
    ;;
    restart)
     systemctl restart nginx
     exit $?
    ;;
    status)
     systemctl status nginx
     exit $?
    ;;
    reload)
     systemctl reload nginx
     exit $?
    ;;
    fixpermissions)
     find {{ steamengine_project_root_path_web }} \
     {% for value in steamengine_sf_path_with_write_permission %}
       -not -path '{{steamengine_project_root_path_web}}/{{ value }}*' \
     {% endfor %}
     {% for value in steamengine_sf_persistent_directory %}
       -not -path '{{steamengine_project_root_path_web}}/{{ steamengine_sf_persistent_directory[value] }}*' \
     {% endfor %}
       -not -path '{{ steamengine_project_root_path_web }}/.env.local' \
       -exec chmod 'u=rwx,g=rx,o=' {} \;

     find {{ steamengine_project_root_path_web }} \
       -not -path '{{ steamengine_project_root_path_web }}/.env.local' \
       -exec chown {{ steamengine_project_user }}:{{ steamengine_project_user }}app {} \; \
 
     /usr/bin/setfacl -R -m u:{{ (ansible_os_family == 'RedHat') | ternary('apache', 'www-data') }}:rwX -m u:{{ steamengine_project_user }}:rwX \
     {% for value in steamengine_sf_path_with_write_permission %}
       {{ steamengine_project_root_path_web }}/{{ value }} \
     {% endfor %}
     {% for value in steamengine_sf_persistent_directory %}
       {{ steamengine_project_root_path_web }}/{{ steamengine_sf_persistent_directory[value] }} \
     {% endfor %}
 
     /usr/bin/setfacl -dR -m u:{{ (ansible_os_family == 'RedHat') | ternary('apache', 'www-data') }}:rwX -m u:{{ steamengine_project_user }}:rwX \
     {% for value in steamengine_sf_path_with_write_permission %}
       {{ steamengine_project_root_path_web }}/{{ value }} \
     {% endfor %}
     {% for value in steamengine_sf_persistent_directory %}
       {{ steamengine_project_root_path_web }}/{{ steamengine_sf_persistent_directory[value] }} \
     {% endfor %}
 
     exit $?
    ;;
    *)
     echo "Wrong option"
     display_usage
     exit 1
    ;;
  esac
done
