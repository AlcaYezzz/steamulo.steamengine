---

- name: Create project folder structure (5)
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: 0770
  with_items:
    - "{{ steamengine_sf_external_logs_path }}"

- name: Create project folder structure (6)
  file:
    path: "{{ steamengine_sf_persistent_path }}/{{ item.key }}"
    state: directory
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: 0770
  with_dict: "{{ steamengine_sf_persistent_directory }}"

- name: Create configuration file
  template:
    src: "project_properties.env.j2"
    dest: "{{ steamengine_conf_path }}/.env.local"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rw,g=r,o=
  when: steamengine_project_configuration is defined
  tags:
    - steamengine_deploy_sf

- name: "Download build {{ steamengine_build_url }}"
  get_url:
    url: "{{ steamengine_build_url }}"
    dest: "{{ steamengine_project_root_path }}/project.zip"
    checksum: "{{ steamengine_build_checksum }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    headers: "{{ steamengine_build_url_headers }}"
    validate_certs: "{{ steamengine_build_url_validate_certs }}"
  register: get_url_build
  tags:
    - steamengine_deploy_sf

- name: "Is there a new build: {{ get_url_build.changed }}"
  set_fact:
    new_build_to_deploy: "{{ get_url_build.changed }}"
  tags:
    - steamengine_deploy_sf

- name: Create tmp directory
  tempfile:
    state: directory
    suffix: "{{ steamengine_project_name }}"
  register: tempdir
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: Unarchive build
  unarchive:
    src: "{{ steamengine_project_root_path }}/project.zip"
    dest: "{{ tempdir.path }}"
    remote_src: true
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: Clean www directory
  file:
    path: "{{ steamengine_project_root_path_web }}"
    state: absent
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: "Move archive files to {{ steamengine_project_root_path_web }}"
  command: "mv {{ tempdir.path }} {{ steamengine_project_root_path_web }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: Remove tmp directory
  file:
    path: "{{ tempdir.path }}"
    state: absent
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: "Ensure var directory exists"
  file:
    path: "{{ steamengine_sf_var_path }}"
    state: directory
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: Create configuration link
  file:
    state: link
    src: "{{ steamengine_conf_path }}/.env.local"
    dest: "{{ steamengine_project_root_path_web }}/.env.local"
  when: new_build_to_deploy and steamengine_project_configuration is defined
  tags:
    - steamengine_deploy_sf

- name: Create logs link directory
  file:
    state: link
    src: "{{ steamengine_sf_external_logs_path }}"
    dest: "{{ steamengine_sf_log_path }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: Create link directory
  file:
    state: link
    src: "{{ steamengine_sf_persistent_path }}/{{ item.key }}"
    dest: "{{ steamengine_project_root_path_web }}/{{ item.value }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  with_dict: "{{ steamengine_sf_persistent_directory }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf

- name: Migrate doctrine schema
  command: "php console doctrine:migrations:migrate -n --allow-no-migration"
  args:
    chdir: "{{ steamengine_sf_bin_path }}"
  when: new_build_to_deploy and steamengine_sf_doctrine_enable
  tags:
    - steamengine_deploy_sf

- name: Cache clear symfony (prod)
  command: "php console cache:clear --env=prod"
  args:
    chdir: "{{ steamengine_sf_bin_path }}"
  when: new_build_to_deploy and steamengine_sf_clear_cache
  tags:
    - steamengine_deploy_sf

- name: "Fix permissions after updating source"
  command: "/{{ steamengine_project_name }}/bin/steamengine fixpermissions"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_sf
