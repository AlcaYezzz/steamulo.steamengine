---

### Build

- name: Create project folder structure Drupal
  file:
    path: "{{ steamengine_drupal_persistent_path }}/{{ item.key }}"
    state: directory
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: 0770
  with_dict: "{{ steamengine_drupal_persistent_directory }}"

- name: Download build {{ steamengine_build_url }}
  get_url:
    url: "{{ steamengine_build_url }}"
    dest: "{{ steamengine_project_root_path }}/project.zip"
    checksum: "{{ steamengine_build_checksum }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    headers: "{{ steamengine_build_url_headers }}"
    validate_certs: "{{ steamengine_build_url_validate_certs }}"
  notify:
    - "{{ steamengine_project_name }} fixpermissions"
    - "{{ steamengine_project_name }} restart"
  register: get_url_build
  tags:
    - steamengine_deploy_drupal

- name: "Is there a new build: {{ get_url_build.changed }}"
  set_fact:
    new_build_to_deploy: "{{ get_url_build.changed|bool }}"
  tags:
    - steamengine_deploy_drupal

- include_tasks:
    file: "./deploy_dump_db.yml"
    apply:
      tags:
        - steamengine_deploy
        - steamengine_deploy_drupal
  when: new_build_to_deploy
  tags: always

- name: Create tmp directory
  tempfile:
    state: directory
    suffix: "{{ steamengine_project_name }}"
  register: tempdir
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Unarchive build
  unarchive:
    src: "{{ steamengine_project_root_path }}/project.zip"
    dest: "{{ tempdir.path }}"
    remote_src: true
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Ensure settings is present
  copy:
    src: "{{ tempdir.path }}/web/sites/default/default.settings.php"
    dest: "{{ steamengine_conf_path }}/settings.php"
    force: no
    remote_src: true
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
  register: drupal_settings
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Customize drupal settings
  blockinfile:
    dest: "{{ steamengine_conf_path }}/settings.php"
    block: "{{ steamengine_drupal_project_setting }}"
    mode: u=rwx,g=rx,o=
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Clean www directory
  file:
    path: "{{ steamengine_project_root_path_web }}"
    state: absent
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Move archive files to {{ steamengine_project_root_path_web }}"
  command: "mv {{ tempdir.path }} {{ steamengine_project_root_path_web }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Add read permission for {{ steamengine_app_user }}"
  file:
    path: "{{ steamengine_project_root_path_web }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    recurse: true
    mode: u=rwx,g=rx,o=
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Clean configuration file
  file:
    state: absent
    path: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Create configuration link
  file:
    state: link
    src: "{{ steamengine_conf_path }}/settings.php"
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Clean link directory
  file:
    state: absent
    path: "{{ steamengine_project_root_path_web }}/{{ item.value }}"
  with_dict: "{{ steamengine_drupal_persistent_directory }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Create link directory
  file:
    state: link
    src: "{{ steamengine_drupal_persistent_path }}/{{ item.key }}"
    dest: "{{ steamengine_project_root_path_web }}/{{ item.value }}"
    force: yes
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  with_dict: "{{ steamengine_drupal_persistent_directory }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Check if database is empty
  command: "{{ steamengine_drush_launcher_path }} -r {{ steamengine_project_root_path_web }} sql-query 'show tables'"
  register: database_table_number
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Is a new deploy: {{ database_table_number.changed and not database_table_number.stdout }}"
  set_fact:
    new_deploy: "{{ database_table_number.changed and not database_table_number.stdout }}"
  tags:
    - steamengine_deploy_drupal

### Install with MySQL Database

- include_tasks:
    file: "./deploy_database.yml"
  when: new_deploy and steamengine_db_dump_url is defined and steamengine_db_dump_url
  tags:
    - steamengine_deploy

### Install with Drush

- include_tasks:
    file: "./install_from_drush.yml"
  when: new_deploy and steamengine_drupal_install_from_drush
  tags:
    - steamengine_deploy

### Cleaning up

- name: Drush command post deploy
  command: "{{ steamengine_drush_launcher_path }} -r {{ steamengine_project_root_path_web }} {{ item }}"
  with_items: "{{ steamengine_drupal_drush_command_deployment }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal
