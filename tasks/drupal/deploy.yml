---

### Build

- name: Download build {{ steamengine_build_url }}
  get_url:
    url: "{{ steamengine_build_url }}"
    dest: "{{ steamengine_home_path }}/project.zip"
    checksum: "{{ steamengine_build_checksum }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    headers: "{{ steamengine_build_url_headers }}"
    validate_certs: "{{ steamengine_build_url_validate_certs }}"
  notify:
    - "{{ steamengine_project_name }} fixpermissions"
    - "{{ steamengine_project_name }} restart"
  register: build_project
  tags:
    - steamengine_deploy_drupal

- name: Clean www directory
  file:
    path: "{{ steamengine_project_root_path_web }}"
    state: absent
  tags:
    - steamengine_deploy_drupal

- name: Create www directory
  file:
    path: "{{ steamengine_project_root_path_web }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    state: directory
  tags:
    - steamengine_deploy_drupal

- name: "Is there a new build: {{ build_project.changed }}"
  set_fact:
    new_build_to_deploy: (build_project.changed|bool)
  tags:
    - steamengine_deploy_drupal

- name: Unzip project
  unarchive:
    src: "{{ steamengine_home_path }}/project.zip"
    dest: "{{ steamengine_project_root_path_web }}"
    remote_src: yes
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Ensure files folder exists
  file:
    path: "{{ steamengine_project_root_path_web }}/web/sites/default/files"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rwx,o=
    state: directory
  tags:
    - steamengine_deploy_drupal

- name: Link files in drupal
  file:
    state: link
    src: "{{ steamengine_home_path }}/default/files"
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/files"
    force: yes
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  tags:
    - steamengine_deploy_drupal

- name: Ensure files folder exists
  file:
    path: "{{ steamengine_home_path }}/default/files"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rwx,o=
    state: directory
  tags:
    - steamengine_deploy_drupal

- name: Ensure settings
  copy:
    src: "{{ steamengine_project_root_path_web }}/web/sites/default/default.settings.php"
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
    force: no
    remote_src: true
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
  register: drupal_settings
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: Customize drupal settings
  blockinfile:
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
    block: |
      $databases['default']['default'] = array (
        'database' => '{{ steamengine_drupal_mysql_name }}',
        'username' => '{{ steamengine_drupal_mysql_user }}',
        'password' => '{{ steamengine_drupal_mysql_password }}',
        'prefix' => '',
        'host' => '{{ steamengine_drupal_mysql_host }}',
        'port' => '{{ steamengine_drupal_mysql_port }}',
        'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql',
        'driver' => 'mysql',
      );
      $settings['hash_salt'] = '{{ steamengine_drupal_hash_salt }}';
      $config_directories['sync'] = '../config';
      $settings['php_storage']['twig']['directory'] = '/tmp';
    mode: u=rwx,g=rx,o=
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

### MySQL Database

- include_tasks:
    file: "./deploy_database.yml"
  when: steamengine_db_dump_url is defined and steamengine_db_dump_url
  tags:
    - steamengine_deploy

### Installing

- name: Check if database is empty
  command: >
    {{ steamengine_drupal_drush_path }} -r \
    {{ steamengine_project_root_path_web }}/web sql-query 'show tables'
  register: database_table_number
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

- name: "Is a new deploy: {{ database_table_number.changed and not database_table_number.stdout }}"
  set_fact:
    new_deploy: database_table_number.changed and not database_table_number.stdout
  tags:
    - steamengine_deploy_drupal

- name: Remove settings
  file:
    path: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
    state: absent
  when: new_deploy
  tags:
    - steamengine_deploy_drupal

- name: Install Drupal with drush.
  command: >
    {{ steamengine_drupal_drush_path }} site-install standard -y  \
    -r {{ steamengine_project_root_path_web }}/web \
    --site-name="{{ steamengine_drupal_site_name }}" \
    --account-name="{{ steamengine_drupal_admin_name }}" \
    --account-pass="{{ steamengine_drupal_admin_password }}" \
    --locale="{{ steamengine_drupal_site_locale }}" \
    --db-url="{{ steamengine_drupal_database_url }}"
  when: new_deploy
  tags:
    - steamengine_deploy_drupal

- name: Check if there is existing config
  stat:
    path: "{{ steamengine_project_root_path_web }}/config"
  register: config_dir
  tags:
    - steamengine_deploy_drupal

- name: Drupal import config
  command: >
    {{ steamengine_drupal_drush_path }} -r {{ steamengine_project_root_path_web }}/web \
    config-import -y --source={{ steamengine_project_root_path_web }}/config
  when: config_dir.stat.exists and new_build_to_deploy
  tags:
    - steamengine_deploy_drupal

### Cleaning up

- name: Clean drupal cache
  command: "{{ steamengine_drupal_drush_path }} -r {{ steamengine_project_root_path_web }}/web cache:rebuild"
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_drupal