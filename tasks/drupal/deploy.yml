---

### Build

- name: Download build {{ steamengine_build_url }}
  get_url:
    url: "{{ steamengine_build_url }}"
    dest: "{{ steamengine_home_path }}/project.zip"
    checksum: "{{ steamengine_build_checksum }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    headers: "{{ steamengine_build_url_headers }}"
    validate_certs: "{{ steamengine_build_url_validate_certs }}"
  notify:
    - "{{ steamengine_project_name }} restart"
  register: build_project
  tags:
    - steamengine_deploy_drupal

- name: Create www directory
  file:
    path: "{{ steamengine_project_root_path_web }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    state: directory
  tags:
    - steamengine_deploy_drupal

- name: Unzip project
  unarchive:
    src: "{{ steamengine_home_path }}/project.zip"
    dest: "{{ steamengine_project_root_path_web }}"
    remote_src: yes
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
  when: build_project.changed
  tags:
    - steamengine_deploy_drupal

- name: Ensure files folder exists
  file:
    path: "{{ steamengine_project_root_path_web }}/web/sites/default/files"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rwx,o=
    state: directory
  tags:
    - steamengine_deploy_drupal

- name: Link files in drupal
  file:
    state: link
    src: "{{ steamengine_home_path }}/default/files"
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/files"
    force: yes
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  tags:
    - steamengine_deploy_drupal

- name: Ensure files folder exists
  file:
    path: "{{ steamengine_home_path }}/default/files"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rwx,o=
    state: directory
  tags:
    - steamengine_deploy_drupal

- name: Ensure settings
  copy:
    src: "{{ steamengine_project_root_path_web }}/web/sites/default/default.settings.php"
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
    force: no
    remote_src: true
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
  register: drupal_settings
  when: build_project.changed
  tags:
    - steamengine_deploy_drupal

- name: Customize drupal settings
  blockinfile:
    dest: "{{ steamengine_project_root_path_web }}/web/sites/default/settings.php"
    block: |
      $databases['default']['default'] = array (
        'database' => '{{ steamengine_drupal_mysql_name }}',
        'username' => '{{ steamengine_drupal_mysql_user }}',
        'password' => '{{ steamengine_drupal_mysql_password }}',
        'prefix' => '',
        'host' => '{{ steamengine_drupal_mysql_host }}',
        'port' => '{{ steamengine_drupal_mysql_port }}',
        'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql',
        'driver' => 'mysql',
      );
      $settings['hash_salt'] = '{{ steamengine_drupal_hash_salt }}';
      $config_directories['sync'] = '../config';
      $settings['php_storage']['twig']['directory'] = '/tmp';
    mode: u=rwx,g=rx,o=
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
  when: drupal_settings.changed
  tags:
    - steamengine_deploy_drupal

### MySQL Database

- include_tasks:
    file: "./deploy_database.yml"
  when: steamengine_db_dump_url is defined and steamengine_db_dump_url
  tags:
    - steamengine_deploy

### Installing

- name: Check if database is empty
  shell: "{{ steamengine_drupal_drush_path }} sql-query 'show tables'"
  args:
    chdir: "{{ steamengine_project_root_path_web }}"
  register: database_table_number
  when: build_project.changed
  tags:
    - steamengine_deploy_drupal

- include_tasks:
    file: "./deploy_empty_project.yml"
  when: not database_table_number.stdout
  tags:
    - steamengine_deploy

- name: Check if there is existing config
  stat:
    path: "{{ steamengine_project_root_path_web }}/config"
  register: config_dir
  tags:
    - steamengine_deploy_drupal

- name: Drupal import config
  shell: "{{ steamengine_drupal_drush_path }} config-import -y --source={{ steamengine_project_root_path_web }}/config"
  args:
    chdir: "{{ steamengine_project_root_path_web }}"
  when: config_dir.stat.exists and config_dir.changed
  tags:
    - steamengine_deploy_drupal

### Cleaning up and restarting

- name: Clean drupal cache
  shell: "{{ steamengine_drupal_drush_path }} cache:rebuild"
  args:
    chdir: "{{ steamengine_project_root_path_web }}"
  tags:
    - steamengine_deploy_drupal

- name: Fix permissions
  command: "/{{ steamengine_project_name }}/bin/steamengine fixpermissions"
  tags:
    - steamengine_deploy_drupal

- name: Restart http server
  command: "/{{ steamengine_project_name }}/bin/steamengine restart"
  tags:
    - steamengine_deploy_drupal
