---

- name: Create configuration file
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible, all changes will be lost.
      {{ steamengine_project_configuration | to_nice_yaml }}
    dest: "{{ steamengine_conf_path }}/project_env_conf.yml"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rw,g=r,o=
  notify:
    - "{{ steamengine_project_name }} restart"
  tags:
    - steamengine_deploy_springboot

- name: Create external configuration file
  ansible.builtin.template:
    src: "{{ steamengine_project_configuration_template_path }}"
    dest: "{{ steamengine_conf_path }}/project_env_conf.yml"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rw,g=r,o=
  when: steamengine_project_configuration_template_path is defined
  notify:
    - "{{ steamengine_project_name }} restart"
  tags:
    - steamengine_deploy_springboot

# Setup checksum verification
- name: Ensure non-empty checksum
  set_fact:
    empty_checksum_check: "{{ (steamengine_build_checksum == '') | ternary('sha1:1', steamengine_build_checksum) }}"

- name: Confirm the verification of the checksum
  set_fact:
    checksum_verified: "{{ steamengine_skip_checksum | ternary('', empty_checksum_check) }}"

- name: "Download build {{ steamengine_build_url }}"
  ansible.builtin.get_url:
    url: "{{ steamengine_build_url }}"
    dest: "{{ steamengine_project_root_path }}/project.jar"
    checksum: "{{ checksum_verified }}"
    owner: "{{ steamengine_project_user }}"
    group: "{{ steamengine_app_user }}"
    mode: u=rwx,g=rx,o=
    headers: "{{ steamengine_build_url_headers }}"
    validate_certs: "{{ steamengine_build_url_validate_certs }}"
  notify:
    - "{{ steamengine_project_name }} restart"
  register: get_url_build
  tags:
    - steamengine_deploy_springboot

- name: "Is there a new build: {{ get_url_build.changed }}"
  ansible.builtin.set_fact:
    new_build_to_deploy: "{{ get_url_build.changed }}"
  tags:
    - steamengine_deploy_springboot

- include_tasks:
    file: common/pre_deploy.yml
    apply:
      tags:
        - steamengine_deploy_springboot
  when: new_build_to_deploy
  tags:
    - steamengine_deploy_springboot
